name: Build and Publish Docker Image

on:
  push:
    branches:
      - master
      - main
      - 'feature/*'
      - 'feat/*'
  pull_request:
    branches:
      - master
      - main

env:
  REGISTRY: docker.io
  IMAGE_NAME: sergeydz/concourse-gitlab-merge-request-resource

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        components: rustfmt, clippy
        
    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
      
    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings
      
    - name: Build
      run: cargo build --release
      
    - name: Run tests
      run: cargo test
      
    - name: Read VERSION file
      id: version
      run: |
        VERSION=$(cat VERSION | tr -d '\n')
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
    - name: Generate version tag
      id: tag
      run: |
        SHORT_SHA=$(git rev-parse --short HEAD)
        if [[ "${{ github.ref }}" == "refs/heads/master" ]] || [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          FULL_VERSION="${{ steps.version.outputs.version }}-${SHORT_SHA}"
        else
          FULL_VERSION="${{ steps.version.outputs.version }}-${SHORT_SHA}-dev"
        fi
        echo "full_version=$FULL_VERSION" >> $GITHUB_OUTPUT
        echo "short_sha=$SHORT_SHA" >> $GITHUB_OUTPUT
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Docker Hub
      if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.IMAGE_NAME }}
        tags: |
          type=raw,value=${{ steps.tag.outputs.full_version }}
          type=raw,value=latest,enable={{is_default_branch}}
          
    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: false
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Push Docker image
      if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Output image details
      if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
      run: |
        echo "Published Docker image:"
        echo "- ${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.full_version }}"
        echo "- ${{ env.IMAGE_NAME }}:latest"
